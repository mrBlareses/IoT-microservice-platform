# IoT Microservice Platform

Учебный проект для демонстрации распределённой микросервисной архитектуры в контексте **Интернета вещей (IoT)**.
Платформа включает инфраструктурные сервисы (Kafka, PostgreSQL, Redis и др.), средства аутентификации и оркестрации (Keycloak, Camunda), а также инструменты мониторинга и наблюдаемости (Prometheus, Grafana, Loki, Tempo, Promtail).

---

## Архитектура

Платформа моделирует работу IoT-системы:

- **PostgreSQL** – хранение пользователей, ролей и настроек.
- **Cassandra** – долговременное хранение телеметрии и временных рядов.
- **Redis** – кэширование и хранение текущих состояний устройств.
- **Kafka + Zookeeper** – шина событий и команд для обмена сообщениями между сервисами.
- **MinIO** – объектное хранилище (файлы, бинарные данные, вложения).
- **Keycloak** – аутентификация и авторизация (SSO, управление пользователями).
- **Camunda** – BPMN-оркестрация бизнес-процессов.
- **Prometheus** – сбор метрик сервисов.
- **Grafana** – визуализация метрик, логов и трейсов.
- **Loki** – централизованный сбор логов.
- **Tempo** – распределённый трейсинг.
- **Promtail** *(опционально)* – агент для отправки логов в Loki.

Диаграммы архитектуры находятся в каталоге [`diagrams/`](./diagrams):

- `context.puml` – системный контекст (C4 уровень 1)
- `containers.puml` – контейнерная диаграмма (C4 уровень 2)

---

## Структура репозитория

```bash
iot-platform/
├── diagrams/                 # C4-диаграммы архитектуры
│   ├── containers.puml
│   └── context.puml
├── infrastructure/           # Инфраструктура Docker
│   ├── docker-compose.yaml
│   └── init.sql
├── .env                      # Переменные окружения
├── README.md                 # Описание проекта
└── Makefile                  # Утилитарные команды для запуска/остановки
