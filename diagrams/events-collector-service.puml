@startuml c4component
!define RECTANGLE class
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

' Стили
skinparam monochrome true
skinparam defaultFontSize 14
skinparam defaultFontName Arial
skinparam shadowing false

' Определение контейнера
Container(events_collector_service_container, "events-collector-service", "Java 24 / Spring Boot 3.5") {
  Component(DeviceEvent, "DeviceEvent", "Модель события")
  Component(DeviceEventRepository, "DeviceEventRepository", "Репозиторий", "")
  Component(EventProcessingService, "EventProcessingService", "Сервис обработки", "")
  Component(KafkaEventListener, "KafkaEventListener", "Слушатель Kafka")
  Component(DeviceIdProducer, "DeviceIdProducer", "Продюсер")
  Component(DeduplicationService, "DeduplicationService", "Сервис дедупликации", "Проверка дублей device_id")
}

' Внешние системы
SystemQueue_Ext(kafka, "Apache Kafka", "Message broker with 'events' and 'device-id-topic' topics")
ComponentDb(cassandra, "Apache Cassandra", "NoSQL Database", "Events data storage")
ComponentDb(redis, "Redis", "In-memory data store", "Deduplication cache")

' Связи внутри контейнера
Rel(KafkaEventListener, DeduplicationService, "передаёт событие", "Java Method Call")
Rel(DeduplicationService, EventProcessingService, "передаёт уникальное событие", "Java Method Call")
Rel(EventProcessingService, DeviceEventRepository, "сохраняет событие", "Java Method Call")
Rel(EventProcessingService, DeviceIdProducer, "отправляет device_id", "Java Method Call")
Rel(DeviceEventRepository, DeviceEvent, "использует", "Java Object")
Rel(EventProcessingService, DeviceEvent, "использует", "Java Object")
Rel(KafkaEventListener, DeviceEvent, "десериализует в", "Avro Deserialization")
Rel(DeduplicationService, DeviceEvent, "проверяет уникальность", "Java Object")

' Связи с внешними системами
Rel(kafka, KafkaEventListener, "доставляет события", "Kafka Consumer API")
Rel(DeviceIdProducer, kafka, "публикует device_id", "Kafka Producer API")
Rel(DeviceEventRepository, cassandra, "сохраняет события", "CQL")
Rel(DeduplicationService, redis, "проверяет дубли", "Redis API")

' Легенда
legend right
  |== Внешние системы |
  | Apache Kafka | Брокер сообщений с топиками: events, device-id-topic |
  | Apache Cassandra | База данных для хранения событий |
  | Redis | In-memory кэш для проверки дубликатов |

  |== Компоненты сервиса |
  | DeviceEvent | DTO для события (соответствует Avro схеме)
  | DeviceEventRepository | Репозиторий для сохранения в Cassandra
  | EventProcessingService | Сервис обработки событий
  | KafkaEventListener | Слушатель Kafka
  | DeviceIdProducer | Продюсер для отправки device_id
  | DeduplicationService | Проверка дубликатов device_id

  |== Протоколы и технологии |
  | Java Method Call | Внутренний вызов метода
  | Java Object | Использование модели данных
  | Avro Deserialization | Преобразование Avro в объект
  | Kafka Consumer API | Подписка на топик Kafka
  | Kafka Producer API | Публикация в топик Kafka
  | CQL | Cassandra Query Language
  | Redis API | Проверка и сохранение ключей в Redis
end legend

@enduml